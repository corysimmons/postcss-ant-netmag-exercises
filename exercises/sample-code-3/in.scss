// Tweak these 2 variables all you'd like to see some cool stuff.
$sizes: 100px 1/2 1/2;
$gutter: 30px;

$length: length($sizes);

.grid {
  display: flex;
  flex-wrap: wrap;
}

// This pattern is super common, and has recently been wrapped up into a generate-grid property.
//
// .column {
//   generate-grid: sizes($sizes) gutter($gutter);
// }
//
// Check out the docs at https://github.com/corysimmons/postcss-ant for more info!

.column {
  margin-right: $gutter;

  @for $i from 1 through $length {
    &:nth-child(#{$length}n + #{$i}) {
      width: sizes($sizes) pluck($i) gutter($gutter);
    }
  }

  &:nth-child(#{$length}n + #{$length}) {
    margin-right: 0;
  }
}

// Bonus!!!
// The ratio stuff you learned in the tutorial has also been wrapped up into an easy-to-use ratio() method. Cast your gaze below and have thou mind blownest!
// We can finally break free of the 1/n column dystopia!!!

$ratio: 1.618;

.golden-ratio-grid {
  generate-grid:
    sizes(
      ratio($ratio, 0)
      ratio($ratio, 1)
      ratio($ratio, 2)
      ratio($ratio, 3)
    )
  ;
}
